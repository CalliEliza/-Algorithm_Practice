
//  11 Truncate a string (first argument) if it is longer than the given maximum string length (second argument).
// Return the truncated string with a '...' ending
function truncate(str, num) {
    var ending = "...";
    if (str.length > num) {
        return str.slice(0, num - 3) + ending;
    }
    else {
        return str;
    }
}

// 12 Write a function that splits an array (first argument) into groups the length of size (second argument) and returns them as a multidimensional array
function chunk(arr, size) {
    var multidimArray = [];
    for (i = 0; i < arr.length / size; ++i) {
        multidimArray[i] = [];
        for (j = 0; j < size.length ; ++j) {
        if (arr[i*size +j] === undefined) {
                return multidimArray;
            }
            multidimArray[i][j] = arr[(i * size) + j];
        }
    }
    return multidimArray;
}

// console.log(chunk(['a', 'b', 'c', 'd'], 2));


// 13 Return the remaining elements of an array after chopping off n elements from the head.
function slasher(arr, howMany) {
    var removed = arr.splice(0, howMany);
    return arr;
}

slasher([1, 2, 3], 2);


// 19 // We'll pass you an array of two numbers. Return the sum of those two numbers and all numbers between them.
function getMaxOfArray(numArray) {
    return Math.max.apply(null, numArray);
}

function getMinOfArray(numArray) {
    return Math.min.apply(null, numArray);
}

function sumAll(arr) {
    var min = getMinOfArray(arr);
    var max = getMaxOfArray(arr);
    var sum = 0;
    for (i = max; i >= min; --i) {
        sum += i;
    }
    return sum;
}
